// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: protos/escrowgpt.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EscrowGPTServiceClient is the client API for EscrowGPTService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EscrowGPTServiceClient interface {
	SinglePrompt(ctx context.Context, in *SinglePromptRequest, opts ...grpc.CallOption) (*SinglePromptResponse, error)
}

type escrowGPTServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEscrowGPTServiceClient(cc grpc.ClientConnInterface) EscrowGPTServiceClient {
	return &escrowGPTServiceClient{cc}
}

func (c *escrowGPTServiceClient) SinglePrompt(ctx context.Context, in *SinglePromptRequest, opts ...grpc.CallOption) (*SinglePromptResponse, error) {
	out := new(SinglePromptResponse)
	err := c.cc.Invoke(ctx, "/escrowgpt.EscrowGPTService/SinglePrompt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EscrowGPTServiceServer is the server API for EscrowGPTService service.
// All implementations must embed UnimplementedEscrowGPTServiceServer
// for forward compatibility
type EscrowGPTServiceServer interface {
	SinglePrompt(context.Context, *SinglePromptRequest) (*SinglePromptResponse, error)
	mustEmbedUnimplementedEscrowGPTServiceServer()
}

// UnimplementedEscrowGPTServiceServer must be embedded to have forward compatible implementations.
type UnimplementedEscrowGPTServiceServer struct {
}

func (UnimplementedEscrowGPTServiceServer) SinglePrompt(context.Context, *SinglePromptRequest) (*SinglePromptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SinglePrompt not implemented")
}
func (UnimplementedEscrowGPTServiceServer) mustEmbedUnimplementedEscrowGPTServiceServer() {}

// UnsafeEscrowGPTServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EscrowGPTServiceServer will
// result in compilation errors.
type UnsafeEscrowGPTServiceServer interface {
	mustEmbedUnimplementedEscrowGPTServiceServer()
}

func RegisterEscrowGPTServiceServer(s grpc.ServiceRegistrar, srv EscrowGPTServiceServer) {
	s.RegisterService(&EscrowGPTService_ServiceDesc, srv)
}

func _EscrowGPTService_SinglePrompt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SinglePromptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowGPTServiceServer).SinglePrompt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrowgpt.EscrowGPTService/SinglePrompt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowGPTServiceServer).SinglePrompt(ctx, req.(*SinglePromptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EscrowGPTService_ServiceDesc is the grpc.ServiceDesc for EscrowGPTService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EscrowGPTService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "escrowgpt.EscrowGPTService",
	HandlerType: (*EscrowGPTServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SinglePrompt",
			Handler:    _EscrowGPTService_SinglePrompt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/escrowgpt.proto",
}
