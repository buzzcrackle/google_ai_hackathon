// @generated by protobuf-ts 2.9.4 with parameter long_type_string
// @generated from protobuf file "listing/listing.proto" (package "keyfi_protos.listing", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ListingService } from "./listing";
import type { GetListingDetailResponse } from "./listing";
import type { GetListingDetailRequest } from "./listing";
import type { GetListingByAddressResponse } from "./listing";
import type { GetListingByAddressRequest } from "./listing";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetListingsResponse } from "./listing";
import type { GetListingsRequest } from "./listing";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service keyfi_protos.listing.ListingService
 */
export interface IListingServiceClient {
    /**
     * @generated from protobuf rpc: GetListings(keyfi_protos.listing.GetListingsRequest) returns (keyfi_protos.listing.GetListingsResponse);
     */
    getListings(input: GetListingsRequest, options?: RpcOptions): UnaryCall<GetListingsRequest, GetListingsResponse>;
    /**
     * @generated from protobuf rpc: GetListingByAddress(keyfi_protos.listing.GetListingByAddressRequest) returns (keyfi_protos.listing.GetListingByAddressResponse);
     */
    getListingByAddress(input: GetListingByAddressRequest, options?: RpcOptions): UnaryCall<GetListingByAddressRequest, GetListingByAddressResponse>;
    /**
     * @generated from protobuf rpc: GetListingDetail(keyfi_protos.listing.GetListingDetailRequest) returns (keyfi_protos.listing.GetListingDetailResponse);
     */
    getListingDetail(input: GetListingDetailRequest, options?: RpcOptions): UnaryCall<GetListingDetailRequest, GetListingDetailResponse>;
}
/**
 * @generated from protobuf service keyfi_protos.listing.ListingService
 */
export class ListingServiceClient implements IListingServiceClient, ServiceInfo {
    typeName = ListingService.typeName;
    methods = ListingService.methods;
    options = ListingService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetListings(keyfi_protos.listing.GetListingsRequest) returns (keyfi_protos.listing.GetListingsResponse);
     */
    getListings(input: GetListingsRequest, options?: RpcOptions): UnaryCall<GetListingsRequest, GetListingsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListingsRequest, GetListingsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetListingByAddress(keyfi_protos.listing.GetListingByAddressRequest) returns (keyfi_protos.listing.GetListingByAddressResponse);
     */
    getListingByAddress(input: GetListingByAddressRequest, options?: RpcOptions): UnaryCall<GetListingByAddressRequest, GetListingByAddressResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListingByAddressRequest, GetListingByAddressResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetListingDetail(keyfi_protos.listing.GetListingDetailRequest) returns (keyfi_protos.listing.GetListingDetailResponse);
     */
    getListingDetail(input: GetListingDetailRequest, options?: RpcOptions): UnaryCall<GetListingDetailRequest, GetListingDetailResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListingDetailRequest, GetListingDetailResponse>("unary", this._transport, method, opt, input);
    }
}
