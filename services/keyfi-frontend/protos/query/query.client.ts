// @generated by protobuf-ts 2.9.4 with parameter long_type_string
// @generated from protobuf file "query/query.proto" (package "keyfi_protos.query", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { QueryService } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetValuesResponse } from "./query";
import type { GetValuesRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service keyfi_protos.query.QueryService
 */
export interface IQueryServiceClient {
    /**
     * @generated from protobuf rpc: GetValues(keyfi_protos.query.GetValuesRequest) returns (keyfi_protos.query.GetValuesResponse);
     */
    getValues(input: GetValuesRequest, options?: RpcOptions): UnaryCall<GetValuesRequest, GetValuesResponse>;
}
/**
 * @generated from protobuf service keyfi_protos.query.QueryService
 */
export class QueryServiceClient implements IQueryServiceClient, ServiceInfo {
    typeName = QueryService.typeName;
    methods = QueryService.methods;
    options = QueryService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetValues(keyfi_protos.query.GetValuesRequest) returns (keyfi_protos.query.GetValuesResponse);
     */
    getValues(input: GetValuesRequest, options?: RpcOptions): UnaryCall<GetValuesRequest, GetValuesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetValuesRequest, GetValuesResponse>("unary", this._transport, method, opt, input);
    }
}
